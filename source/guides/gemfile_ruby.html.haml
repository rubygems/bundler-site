.container.guide
  %h2 Specifying a Ruby Version

  .contents
    .bullet
      .description
        Like gems, developers can setup a dependency on Ruby.
        This makes your app fail faster in case you depend on specific features in a Ruby VM.
        This way, the Ruby VM on your deployment server will match your local one. You can do this by using the <code>ruby</code> directive in the <code>Gemfile</code>:
      :code
        # lang: ruby
        ruby 'RUBY_VERSION', :engine => 'ENGINE', :engine_version => 'ENGINE_VERSION',
          :patchlevel => 'RUBY_PATCHLEVEL'

    .bullet
      .description
        If you wanted to use JRuby 1.6.7 using Ruby 1.9.3, you would simply do the following:
      :code
        # lang: ruby
        ruby '1.9.3', :engine => 'jruby', :engine_version => '1.6.7'

    .bullet#patchlevel
      .description
        It's also possible to restrict the patchlevel of the Ruby used by doing the following:
      :code
        # lang: ruby
        ruby '1.9.3', :patchlevel => '448'

    .bullet
      .description
        Bundler will make checks against the current running Ruby VM to make sure it matches what is specified in the <code>Gemfile</code>. If things don't match, Bundler will raise an Exception explaining what doesn't match.
      :code
        Your Ruby version is 1.8.7, but your Gemfile specified 1.9.3

    .bullet
      .description
        Both <code>:engine</code> and <code>:engine_version</code> are optional.
        When these options are omitted, this means the app is compatible with a particular Ruby ABI but the engine is irrelevant.
        When <code>:engine</code> is used, <code>:engine_version</code> must also be specified.
    .bullet
      .description
        Using the <code>platform</code> command with the <code>--ruby</code> flag, you can see what <code>ruby</code> directive is specified in the <code>Gemfile</code>.
      :code
        ruby 1.9.3 (jruby 1.6.7)
      = link_to 'Learn More: bundle platform', '/man/bundle-platform.1.html', class: 'btn btn-primary'

    .bullet
      .description
        In the <code>ruby</code> directive, <code>:patchlevel</code> is optional, as patchlevel releases are usually compatible and include important security fixes.
        The patchlevel option checks the <code>RUBY_PATCHLEVEL</code> constant, and if not specified then bundler will simply ignore it.

    .bullet
      .description
        Version operators for specifying a Ruby version are also available.
        The set of supported version operators is that of Rubygems (<code>gem</code> version operators). (ie. <code><</code>, <code>></code>, <code><=</code>, <code>>=</code>, <code>~></code>, <code>=</code>)
      :code
        # lang: ruby
        ruby '~> 2.3.0'
      = link_to 'Learn More: Version Operators', 'https://guides.rubygems.org/patterns/#declaring-dependencies', class: 'btn btn-primary'
